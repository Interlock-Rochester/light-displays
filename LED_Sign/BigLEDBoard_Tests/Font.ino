//
// Font definitions
//
//  v100  2016-02-17

#include <avr/pgmspace.h>

/* these are stored in vertical columns, left to right, with bit 0x80
 * signifying the bottom of the glyph, 0x01 being the top
 */

/* font data for CAPScaps */
const unsigned char _fontdata_CAPScaps[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0xBF, 
/* 0x22  '"' [2] */  0x03, 
/* 0x23  '#' [3] */  0x24,  0x7E,  0x24,  0x7E,  0x24, 
/* 0x24  '$' [8] */  0x44,  0x4A,  0xCB,  0x4A,  0x32, 
/* 0x25  '%' [13] */  0xC2,  0x25,  0x12,  0x48,  0xA4,  0x43, 
/* 0x26  '&' [19] */  0x6E,  0x91,  0xA9,  0x46,  0xA0, 
/* 0x27  ''' [24] */  0x02,  0x01, 
/* 0x28  '(' [26] */  0x7E,  0x81, 
/* 0x29  ')' [28] */  0x81,  0x7E, 
/* 0x2A  '*' [30] */  0x22,  0x14,  0x3E,  0x14,  0x22, 
/* 0x2B  '+' [35] */  0x08,  0x1C,  0x08, 
/* 0x2C  ',' [38] */  0xC0, 
/* 0x2D  '-' [39] */  0x08,  0x08,  0x08, 
/* 0x2E  '.' [42] */  0x80, 
/* 0x2F  '/' [43] */  0xC0,  0x30,  0x0C,  0x03, 
/* 0x30  '0' [47] */  0x7E,  0x81,  0x81,  0x7E, 
/* 0x31  '1' [51] */  0x82,  0xFF,  0x80, 
/* 0x32  '2' [54] */  0xF1,  0x89,  0x89,  0x86, 
/* 0x33  '3' [58] */  0x41,  0x89,  0x8D,  0x73, 
/* 0x34  '4' [62] */  0x0E,  0x08,  0x08,  0xFF, 
/* 0x35  '5' [66] */  0x4F,  0x89,  0x89,  0x71, 
/* 0x36  '6' [70] */  0x7E,  0x89,  0x89,  0x72, 
/* 0x37  '7' [74] */  0x01,  0xF1,  0x09,  0x07, 
/* 0x38  '8' [78] */  0x76,  0x89,  0x89,  0x76, 
/* 0x39  '9' [82] */  0x46,  0x89,  0x89,  0x7E, 
/* 0x3A  ':' [86] */  0x42, 
/* 0x3B  ';' [87] */  0xC2, 
/* 0x3C  '<' [88] */  0x08,  0x14,  0x22,  0x41, 
/* 0x3D  '=' [92] */  0x14,  0x14,  0x14, 
/* 0x3E  '>' [95] */  0x41,  0x22,  0x14,  0x08, 
/* 0x3F  '?' [99] */  0x02,  0x01,  0xB1,  0x09,  0x06, 
/* 0x40  '@' [104] */  0x7E,  0x81,  0xB9,  0xA9,  0x1E, 
/* 0x41  'A' [109] */  0xFE,  0x09,  0x09,  0x09,  0xFE, 
/* 0x42  'B' [114] */  0xFF,  0x89,  0x89,  0x89,  0x76, 
/* 0x43  'C' [119] */  0x7E,  0x81,  0x81,  0x81,  0x42, 
/* 0x44  'D' [124] */  0xFF,  0x81,  0x81,  0x81,  0x7E, 
/* 0x45  'E' [129] */  0xFF,  0x89,  0x89,  0x81,  0x81, 
/* 0x46  'F' [134] */  0xFF,  0x09,  0x09,  0x01,  0x01, 
/* 0x47  'G' [139] */  0x7E,  0x81,  0x89,  0x89,  0xFA, 
/* 0x48  'H' [144] */  0xFF,  0x08,  0x08,  0x08,  0xFF, 
/* 0x49  'I' [149] */  0x81,  0xFF,  0x81, 
/* 0x4A  'J' [152] */  0x40,  0x80,  0x81,  0x7F,  0x01, 
/* 0x4B  'K' [157] */  0xFF,  0x08,  0x14,  0x22,  0xC1, 
/* 0x4C  'L' [162] */  0xFF,  0x80,  0x80,  0x80,  0x80, 
/* 0x4D  'M' [167] */  0xFF,  0x02,  0x0C,  0x02,  0xFF, 
/* 0x4E  'N' [172] */  0xFF,  0x06,  0x18,  0x60,  0xFF, 
/* 0x4F  'O' [177] */  0x7E,  0x81,  0x81,  0x81,  0x7E, 
/* 0x50  'P' [182] */  0xFF,  0x09,  0x09,  0x09,  0x06, 
/* 0x51  'Q' [187] */  0x7E,  0x81,  0xB1,  0x41,  0xBE, 
/* 0x52  'R' [192] */  0xFF,  0x09,  0x09,  0x09,  0xF6, 
/* 0x53  'S' [197] */  0x46,  0x89,  0x89,  0x89,  0x72, 
/* 0x54  'T' [202] */  0x01,  0x01,  0xFF,  0x01,  0x01, 
/* 0x55  'U' [207] */  0x7F,  0x80,  0x80,  0x80,  0x7F, 
/* 0x56  'V' [212] */  0x0F,  0x30,  0xC0,  0x30,  0x0F, 
/* 0x57  'W' [217] */  0xFF,  0x40,  0x38,  0x40,  0xFF, 
/* 0x58  'X' [222] */  0xE3,  0x14,  0x08,  0x14,  0xE3, 
/* 0x59  'Y' [227] */  0x03,  0x04,  0xF8,  0x04,  0x03, 
/* 0x5A  'Z' [232] */  0xE1,  0x91,  0x89,  0x85,  0x83, 
/* 0x5B  '[' [237] */  0xFF,  0x81, 
/* 0x5C  '\' [239] */  0x03,  0x0C,  0x30,  0xC0, 
/* 0x5D  ']' [243] */  0x81,  0xFF, 
/* 0x5E  '^' [245] */  0x04,  0x02,  0x01,  0x02,  0x04, 
/* 0x5F  '_' [250] */  0x80,  0x80,  0x80,  0x80,  0x80, 
/* 0x60  '`' [255] */  0x01,  0x02, 
/* 0x61  'a' [257] */  0xF0,  0x28,  0x28,  0xF0, 
/* 0x62  'b' [261] */  0xF8,  0xA8,  0xA8,  0x50, 
/* 0x63  'c' [265] */  0x70,  0x88,  0x88,  0x50, 
/* 0x64  'd' [269] */  0xF8,  0x88,  0x88,  0x70, 
/* 0x65  'e' [273] */  0xF8,  0xA8,  0xA8,  0x88, 
/* 0x66  'f' [277] */  0xF8,  0x28,  0x28,  0x08, 
/* 0x67  'g' [281] */  0x70,  0x88,  0xA8,  0xE8, 
/* 0x68  'h' [285] */  0xF8,  0x20,  0x20,  0xF8, 
/* 0x69  'i' [289] */  0x88,  0xF8,  0x88, 
/* 0x6A  'j' [292] */  0x40,  0x88,  0x88,  0x78, 
/* 0x6B  'k' [296] */  0xF8,  0x20,  0x50,  0x88, 
/* 0x6C  'l' [300] */  0xF8,  0x80,  0x80,  0x80, 
/* 0x6D  'm' [304] */  0xF8,  0x10,  0x60,  0x10,  0xF8, 
/* 0x6E  'n' [309] */  0xF8,  0x10,  0x20,  0xF8, 
/* 0x6F  'o' [313] */  0x70,  0x88,  0x88,  0x70, 
/* 0x70  'p' [317] */  0xF8,  0x28,  0x28,  0x10, 
/* 0x71  'q' [321] */  0x70,  0x88,  0x48,  0xB0, 
/* 0x72  'r' [325] */  0xF8,  0x28,  0x28,  0xD0, 
/* 0x73  's' [329] */  0x90,  0xA8,  0xA8,  0x48, 
/* 0x74  't' [333] */  0x08,  0xF8,  0x08, 
/* 0x75  'u' [336] */  0x78,  0x80,  0x80,  0x78, 
/* 0x76  'v' [340] */  0x18,  0x60,  0x80,  0x60,  0x18, 
/* 0x77  'w' [345] */  0xF8,  0x40,  0x30,  0x40,  0xF8, 
/* 0x78  'x' [350] */  0x88,  0x50,  0x20,  0x50,  0x88, 
/* 0x79  'y' [355] */  0x08,  0x10,  0xE0,  0x10,  0x08, 
/* 0x7A  'z' [360] */  0xC8,  0xA8,  0xA8,  0x98, 
/* 0x7B  '{' [364] */  0x08,  0x76,  0x81, 
/* 0x7C  '|' [367] */  0xFF, 
/* 0x7D  '}' [368] */  0x81,  0x76,  0x08, 
/* 0x7E  '~' [371] */  0x10,  0x08,  0x10,  0x08, 
/* 0x80      [375] */  0x0c, 0x1e, 0x3e, 0x7c, 0x3e, 0x1e, 0x0c,
0x00
};

/* these are the font data start points starting at ' ' ascii
 * it reads until the index into the data buffer is the start point of the next index
 *  
 */
const int _fontglyphs_CAPScaps[] PROGMEM = {
0, 1, 2, 3, 8, 13, 19, 24, 26, 28, 30, 
35, 38, 39, 42, 43, 47, 51, 54, 58, 62, 66, 
70, 74, 78, 82, 86, 87, 88, 92, 95, 99, 104, 
109, 114, 119, 124, 129, 134, 139, 144, 149, 152, 157, 
162, 167, 172, 177, 182, 187, 192, 197, 202, 207, 212, 
217, 222, 227, 232, 237, 239, 243, 245, 250, 255, 257, 
261, 265, 269, 273, 277, 281, 285, 289, 292, 296, 300, 
304, 309, 313, 317, 321, 325, 329, 333, 336, 340, 345, 
350, 355, 360, 364, 367, 368, 371, 375, 382 };

//////////////////////////////////////////////////////////////////

/* font data for Ready P9 */
const unsigned char _fontdata_ReadyP9[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0xBF, 
/* 0x22  '"' [2] */  0x00,  0x0E, 
/* 0x23  '#' [4] */  0x28,  0xFE,  0x28,  0xFE,  0x28, 
/* 0x24  '$' [9] */  0x48,  0x54,  0xFE,  0x54,  0x24, 
/* 0x25  '%' [14] */  0x46,  0x26,  0x10,  0xC8,  0xC4, 
/* 0x26  '&' [19] */  0x6C,  0x92,  0xAA,  0x44,  0xA0, 
/* 0x27  ''' [24] */  0x00,  0x0A,  0x06, 
/* 0x28  '(' [27] */  0x00,  0x38,  0x44,  0x82, 
/* 0x29  ')' [31] */  0x00,  0x82,  0x44,  0x38, 
/* 0x2A  '*' [35] */  0x28,  0x10,  0x7C,  0x10,  0x28, 
/* 0x2B  '+' [40] */  0x10,  0x10,  0x7C,  0x10,  0x10, 
/* 0x2C  ',' [45] */  0x00,  0xA0,  0x60, 
/* 0x2D  '-' [48] */  0x10,  0x10,  0x10,  0x10,  0x10, 
/* 0x2E  '.' [53] */  0x00,  0xC0,  0xC0, 
/* 0x2F  '/' [56] */  0x40,  0x20,  0x10,  0x08,  0x04, 
/* 0x30  '0' [61] */  0x7C,  0xA2,  0x92,  0x8A,  0x7C, 
/* 0x31  '1' [66] */  0x00,  0x84,  0xFE,  0x80, 
/* 0x32  '2' [70] */  0x84,  0xC2,  0xA2,  0x92,  0x8C, 
/* 0x33  '3' [75] */  0x42,  0x82,  0x8A,  0x96,  0x62, 
/* 0x34  '4' [80] */  0x30,  0x28,  0x24,  0xFE,  0x20, 
/* 0x35  '5' [85] */  0x4E,  0x8A,  0x8A,  0x8A,  0x72, 
/* 0x36  '6' [90] */  0x78,  0x94,  0x92,  0x92,  0x60, 
/* 0x37  '7' [95] */  0x02,  0x02,  0xF2,  0x0A,  0x06, 
/* 0x38  '8' [100] */  0x6C,  0x92,  0x92,  0x92,  0x6C, 
/* 0x39  '9' [105] */  0x0C,  0x92,  0x92,  0x52,  0x3C, 
/* 0x3A  ':' [110] */  0x00,  0x6C,  0x6C, 
/* 0x3B  ';' [113] */  0x00,  0xAC,  0x6C, 
/* 0x3C  '<' [116] */  0x10,  0x28,  0x44,  0x82, 
/* 0x3D  '=' [120] */  0x28,  0x28,  0x28,  0x28,  0x28, 
/* 0x3E  '>' [125] */  0x00,  0x82,  0x44,  0x28,  0x10, 
/* 0x3F  '?' [130] */  0x04,  0x02,  0xA2,  0x12,  0x0C, 
/* 0x40  '@' [135] */  0x7C,  0x82,  0x92,  0xAA,  0x3C, 
/* 0x41  'A' [140] */  0xFC,  0x12,  0x12,  0x12,  0xFC, 
/* 0x42  'B' [145] */  0xFE,  0x92,  0x92,  0x92,  0x6C, 
/* 0x43  'C' [150] */  0x7C,  0x82,  0x82,  0x82,  0x44, 
/* 0x44  'D' [155] */  0xFE,  0x82,  0x82,  0x44,  0x38, 
/* 0x45  'E' [160] */  0xFE,  0x92,  0x92,  0x92,  0x82, 
/* 0x46  'F' [165] */  0xFE,  0x12,  0x12,  0x12,  0x02, 
/* 0x47  'G' [170] */  0x7C,  0x82,  0x92,  0x92,  0xF4, 
/* 0x48  'H' [175] */  0xFE,  0x10,  0x10,  0x10,  0xFE, 
/* 0x49  'I' [180] */  0x00,  0x82,  0xFE,  0x82, 
/* 0x4A  'J' [184] */  0x40,  0x80,  0x82,  0x7E,  0x02, 
/* 0x4B  'K' [189] */  0xFE,  0x10,  0x28,  0x44,  0x82, 
/* 0x4C  'L' [194] */  0xFE,  0x80,  0x80,  0x80,  0x80, 
/* 0x4D  'M' [199] */  0xFE,  0x04,  0x18,  0x04,  0xFE, 
/* 0x4E  'N' [204] */  0xFE,  0x08,  0x10,  0x20,  0xFE, 
/* 0x4F  'O' [209] */  0x7C,  0x82,  0x82,  0x82,  0x7C, 
/* 0x50  'P' [214] */  0xFE,  0x12,  0x12,  0x12,  0x0C, 
/* 0x51  'Q' [219] */  0x7C,  0x82,  0xA2,  0x42,  0xBC, 
/* 0x52  'R' [224] */  0xFE,  0x12,  0x32,  0x52,  0x8C, 
/* 0x53  'S' [229] */  0x4C,  0x92,  0x92,  0x92,  0x64, 
/* 0x54  'T' [234] */  0x02,  0x02,  0xFE,  0x02,  0x02, 
/* 0x55  'U' [239] */  0x7E,  0x80,  0x80,  0x80,  0x7E, 
/* 0x56  'V' [244] */  0x3E,  0x40,  0x80,  0x40,  0x3E, 
/* 0x57  'W' [249] */  0xFE,  0x40,  0x30,  0x40,  0xFE, 
/* 0x58  'X' [254] */  0xC6,  0x28,  0x10,  0x28,  0xC6, 
/* 0x59  'Y' [259] */  0x06,  0x08,  0xF0,  0x08,  0x06, 
/* 0x5A  'Z' [264] */  0xC2,  0xA2,  0x92,  0x8A,  0x86, 
/* 0x5B  '[' [269] */  0x00,  0xFE,  0x82,  0x82, 
/* 0x5C  '\' [273] */  0x04,  0x08,  0x10,  0x20,  0x40, 
/* 0x5D  ']' [278] */  0x00,  0x82,  0x82,  0xFE, 
/* 0x5E  '^' [282] */  0x30,  0x0C,  0x02,  0x0C,  0x30, 
/* 0x5F  '_' [287] */  0x80,  0x80,  0x80,  0x80,  0x80, 
/* 0x60  '`' [292] */  0x00,  0x06,  0x0A, 
/* 0x61  'a' [295] */  0x40,  0xA8,  0xA8,  0xA8,  0xF0, 
/* 0x62  'b' [300] */  0x7E,  0x90,  0x88,  0x88,  0x70, 
/* 0x63  'c' [305] */  0x70,  0x88,  0x88,  0x88,  0x40, 
/* 0x64  'd' [310] */  0x70,  0x88,  0x88,  0x90,  0xFE, 
/* 0x65  'e' [315] */  0x70,  0xA8,  0xA8,  0xA8,  0x30, 
/* 0x66  'f' [320] */  0x00,  0x10,  0xFC,  0x12,  0x04, 
/* 0x67  'g' [325] */  0x10,  0xA8,  0xA8,  0xA8,  0x78, 
/* 0x68  'h' [330] */  0xFE,  0x10,  0x08,  0x08,  0xF0, 
/* 0x69  'i' [335] */  0x00,  0x88,  0xFA,  0x80, 
/* 0x6A  'j' [339] */  0x40,  0x80,  0x80,  0x7A, 
/* 0x6B  'k' [343] */  0x00,  0xFE,  0x20,  0x50,  0x88, 
/* 0x6C  'l' [348] */  0x00,  0x82,  0xFE,  0x80, 
/* 0x6D  'm' [352] */  0xF8,  0x08,  0xF0,  0x08,  0xF0, 
/* 0x6E  'n' [357] */  0xF8,  0x10,  0x08,  0x08,  0xF0, 
/* 0x6F  'o' [362] */  0x70,  0x88,  0x88,  0x88,  0x70, 
/* 0x70  'p' [367] */  0xF8,  0x28,  0x28,  0x28,  0x10, 
/* 0x71  'q' [372] */  0x10,  0x28,  0x28,  0x28,  0xF8, 
/* 0x72  'r' [377] */  0x00,  0xF8,  0x10,  0x08,  0x08, 
/* 0x73  's' [382] */  0x90,  0xA8,  0xA8,  0xA8,  0x48, 
/* 0x74  't' [387] */  0x00,  0x08,  0x7C,  0x88,  0x40, 
/* 0x75  'u' [392] */  0x78,  0x80,  0x80,  0x40,  0xF8, 
/* 0x76  'v' [397] */  0x38,  0x40,  0x80,  0x40,  0x38, 
/* 0x77  'w' [402] */  0x78,  0x80,  0x60,  0x80,  0x78, 
/* 0x78  'x' [407] */  0x88,  0x48,  0x70,  0x90,  0x88, 
/* 0x79  'y' [412] */  0x88,  0x90,  0x60,  0x20,  0x18, 
/* 0x7A  'z' [417] */  0x88,  0xC8,  0xA8,  0x98,  0x88, 
/* 0x7B  '{' [422] */  0x10,  0x6C,  0x82,  0x82, 
/* 0x7C  '|' [426] */  0x00, 
/* 0x7D  '}' [427] */  0x00,  0x82,  0x82,  0x6C,  0x10, 
/* 0x7E  '~' [432] */  0x10,  0x08,  0x10,  0x20,  0x10, 
/* 0x7F  '' [437] */  0x00, 
};

const int _fontglyphs_ReadyP9[] PROGMEM = {
0, 1, 2, 4, 9, 14, 19, 24, 27, 31, 35, 
40, 45, 48, 53, 56, 61, 66, 70, 75, 80, 85, 
90, 95, 100, 105, 110, 113, 116, 120, 125, 130, 135, 
140, 145, 150, 155, 160, 165, 170, 175, 180, 184, 189, 
194, 199, 204, 209, 214, 219, 224, 229, 234, 239, 244, 
249, 254, 259, 264, 269, 273, 278, 282, 287, 292, 295, 
300, 305, 310, 315, 320, 325, 330, 335, 339, 343, 348, 
352, 357, 362, 367, 372, 377, 382, 387, 392, 397, 402, 
407, 412, 417, 422, 426, 427, 432, };


/* font data for Narrow */
//////////////////////////////////////////////////////////////////

/* font data for Stern Narrow */
const unsigned char _fontdata_NarrowCaps[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0xBF, 
/* 0x22  '"' [2] */  0x03, 
/* 0x23  '#' [3] */  0x24,  0x7E,  0x24,  0x7E,  0x24, 
/* 0x24  '$' [8] */  0x4E,  0xCB,  0x7A, 
/* 0x25  '%' [11] */  0xE3,  0x18,  0xC7, 
/* 0x26  '&' [14] */  0x76,  0x89,  0x76,  0xA0, 
/* 0x27  ''' [18] */  0x03, 
/* 0x28  '(' [19] */  0x7E,  0x81, 
/* 0x29  ')' [21] */  0x81,  0x7E, 
/* 0x2A  '*' [23] */  0x54,  0x38,  0x54, 
/* 0x2B  '+' [26] */  0x10,  0x38,  0x10, 
/* 0x2C  ',' [29] */  0x80,  0x40, 
/* 0x2D  '-' [31] */  0x10,  0x10,  0x10, 
/* 0x2E  '.' [34] */  0x80, 
/* 0x2F  '/' [35] */  0xE0,  0x18,  0x07, 
/* 0x30  '0' [38] */  0xFF,  0x81,  0xFF, 
/* 0x31  '1' [41] */  0x00,  0xFF, 
/* 0x32  '2' [43] */  0xF9,  0x89,  0x8F, 
/* 0x33  '3' [46] */  0x81,  0x89,  0x76, 
/* 0x34  '4' [49] */  0x0F,  0x08,  0xFE, 
/* 0x35  '5' [52] */  0x8F,  0x89,  0x71, 
/* 0x36  '6' [55] */  0x7E,  0x89,  0x72, 
/* 0x37  '7' [58] */  0x01,  0xF1,  0x0F, 
/* 0x38  '8' [61] */  0x76,  0x89,  0x76, 
/* 0x39  '9' [64] */  0x46,  0x89,  0x7E, 
/* 0x3A  ':' [67] */  0x24, 
/* 0x3B  ';' [68] */  0xC4, 
/* 0x3C  '<' [69] */  0x10,  0x28,  0x44, 
/* 0x3D  '=' [72] */  0x28,  0x28,  0x28, 
/* 0x3E  '>' [75] */  0x44,  0x28,  0x10, 
/* 0x3F  '?' [78] */  0x02,  0xB1,  0x0E, 
/* 0x40  '@' [81] */  0x7E,  0x89,  0x95,  0x9E, 
/* 0x41  'A' [85] */  0xFE,  0x09,  0xFE, 
/* 0x42  'B' [88] */  0xFF,  0x89,  0x76, 
/* 0x43  'C' [91] */  0x7E,  0x81,  0x81, 
/* 0x44  'D' [94] */  0xFF,  0x81,  0x7E, 
/* 0x45  'E' [97] */  0xFF,  0x89,  0x81, 
/* 0x46  'F' [100] */  0xFF,  0x09,  0x01, 
/* 0x47  'G' [103] */  0x7E,  0x81,  0xF1, 
/* 0x48  'H' [106] */  0xFF,  0x08,  0xFF, 
/* 0x49  'I' [109] */  0x81,  0xFF,  0x81, 
/* 0x4A  'J' [112] */  0x41,  0x81,  0x7F, 
/* 0x4B  'K' [115] */  0xFF,  0x08,  0xF7, 
/* 0x4C  'L' [118] */  0xFF,  0x80,  0x80, 
/* 0x4D  'M' [121] */  0xFF,  0x02,  0x0C,  0x02,  0xFF, 
/* 0x4E  'N' [126] */  0xFF,  0x04,  0x08,  0xFF, 
/* 0x4F  'O' [130] */  0xFF,  0x81,  0xFF, 
/* 0x50  'P' [133] */  0xFF,  0x09,  0x0F, 
/* 0x51  'Q' [136] */  0x7F,  0x41,  0xBF, 
/* 0x52  'R' [139] */  0xFF,  0x09,  0xF6, 
/* 0x53  'S' [142] */  0x86,  0x89,  0x71, 
/* 0x54  'T' [145] */  0x01,  0xFF,  0x01, 
/* 0x55  'U' [148] */  0xFF,  0x80,  0xFF, 
/* 0x56  'V' [151] */  0x7F,  0x80,  0x7F, 
/* 0x57  'W' [154] */  0xFF,  0x40,  0x30,  0x40,  0xFF, 
/* 0x58  'X' [159] */  0xF7,  0x08,  0xF7, 
/* 0x59  'Y' [162] */  0x07,  0xF8,  0x07, 
/* 0x5A  'Z' [165] */  0xE1,  0x99,  0x87, 
/* 0x5B  '[' [168] */  0xFF,  0x81, 
/* 0x5C  '\' [170] */  0x07,  0x18,  0xE0, 
/* 0x5D  ']' [173] */  0x81,  0xFF, 
/* 0x5E  '^' [175] */  0x06,  0x01,  0x06, 
/* 0x5F  '_' [178] */  0x80,  0x80,  0x80, 
/* 0x60  '`' [181] */  0x03, 
/* 0x61  'a' [182] */  0xF0,  0x28,  0x28,  0xF0, 
/* 0x62  'b' [186] */  0xF8,  0xA8,  0xA8,  0x50, 
/* 0x63  'c' [190] */  0x70,  0x88,  0x88, 
/* 0x64  'd' [193] */  0xF8,  0x88,  0x88,  0x70, 
/* 0x65  'e' [197] */  0xF8,  0xA8,  0xA8,  0x88, 
/* 0x66  'f' [201] */  0xF8,  0x28,  0x28,  0x08, 
/* 0x67  'g' [205] */  0x70,  0x88,  0xA8,  0xE8, 
/* 0x68  'h' [209] */  0xF8,  0x20,  0x20,  0xF8, 
/* 0x69  'i' [213] */  0x88,  0xF8,  0x88, 
/* 0x6A  'j' [216] */  0x40,  0x80,  0x80,  0x78, 
/* 0x6B  'k' [220] */  0xF8,  0x20,  0x50,  0x88, 
/* 0x6C  'l' [224] */  0xF8,  0x80,  0x80,  0x80, 
/* 0x6D  'm' [228] */  0xF8,  0x10,  0x20,  0x10,  0xF8, 
/* 0x6E  'n' [233] */  0xF8,  0x10,  0x20,  0xF8, 
/* 0x6F  'o' [237] */  0x70,  0x88,  0x88,  0x70, 
/* 0x70  'p' [241] */  0xF8,  0x28,  0x28,  0x10, 
/* 0x71  'q' [245] */  0x70,  0x88,  0xA8,  0x48,  0xB0, 
/* 0x72  'r' [250] */  0xF8,  0x28,  0x28,  0xD0, 
/* 0x73  's' [254] */  0x90,  0xA8,  0xA8,  0x48, 
/* 0x74  't' [258] */  0x08,  0xF8,  0x08, 
/* 0x75  'u' [261] */  0x78,  0x80,  0x80,  0x78, 
/* 0x76  'v' [265] */  0x38,  0x40,  0x80,  0x40,  0x38, 
/* 0x77  'w' [270] */  0xF8,  0x40,  0x20,  0x40,  0xF8, 
/* 0x78  'x' [275] */  0x88,  0x50,  0x20,  0x50,  0x88, 
/* 0x79  'y' [280] */  0x08,  0x10,  0xE0,  0x10,  0x08, 
/* 0x7A  'z' [285] */  0x88,  0xC8,  0xA8,  0x98,  0x88, 
/* 0x7B  '{' [290] */  0x08,  0x76,  0x81, 
/* 0x7C  '|' [293] */  0xFF, 
/* 0x7D  '}' [294] */  0x81,  0x76,  0x08, 
/* 0x7E  '~' [297] */  0x08,  0x04,  0x08,  0x04, 
/* 0x7F  ' ' [301] */  0x00, 
};

const int _fontglyphs_NarrowCaps[] PROGMEM = {
0, 1, 2, 3, 8, 11, 14, 18, 19, 21, 23, 
26, 29, 31, 34, 35, 38, 41, 43, 46, 49, 52, 
55, 58, 61, 64, 67, 68, 69, 72, 75, 78, 81, 
85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 
118, 121, 126, 130, 133, 136, 139, 142, 145, 148, 151, 
154, 159, 162, 165, 168, 170, 173, 175, 178, 181, 182, 
186, 190, 193, 197, 201, 205, 209, 213, 216, 220, 224, 
228, 233, 237, 241, 245, 250, 254, 258, 261, 265, 270, 
275, 280, 285, 290, 293, 294, 297, };


//////////////////////////////////////////////////////////////////


/* font data for Onyx */
const unsigned char _fontdata_Onyx[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0xD8,  0xDF,  0x07, 
/* 0x22  '"' [4] */  0x04,  0x07,  0x03,  0x04,  0x07,  0x03, 
/* 0x23  '#' [10] */  0x24,  0xFF,  0xFF,  0x24,  0xFF,  0x24, 
/* 0x24  '$' [16] */  0x46,  0x89,  0xFF,  0x89,  0xF9,  0x72, 
/* 0x25  '%' [22] */  0x02,  0xC5,  0x32,  0x4C,  0xA3,  0x40, 
/* 0x26  '&' [28] */  0x76,  0xF9,  0x99,  0xA6,  0x40,  0xA0, 
/* 0x27  ''' [34] */  0x04,  0x07,  0x03, 
/* 0x28  '(' [37] */  0x00,  0x3C,  0x7E,  0xC1,  0x80, 
/* 0x29  ')' [42] */  0x00,  0x80,  0xC1,  0x7E,  0x3C, 
/* 0x2A  '*' [47] */  0x08,  0x2A,  0x1C,  0x1C,  0x2A,  0x08, 
/* 0x2B  '+' [53] */  0x08,  0x08,  0x3E,  0x3E,  0x08,  0x08, 
/* 0x2C  ',' [59] */  0x80,  0xE0,  0x60, 
/* 0x2D  '-' [62] */  0x10,  0x10,  0x10,  0x10,  0x10,  0x10, 
/* 0x2E  '.' [68] */  0xC0,  0xC0, 
/* 0x2F  '/' [70] */  0xC0,  0xF0,  0x3C,  0x0F,  0x03, 
/* 0x30  '0' [75] */  0x7E,  0xFF,  0x91,  0x89,  0x85,  0x7E, 
/* 0x31  '1' [81] */  0x00,  0x82,  0xFF,  0xFF,  0x80, 
/* 0x32  '2' [86] */  0x86,  0xC1,  0xE1,  0xB1,  0x9F,  0x8E, 
/* 0x33  '3' [92] */  0x66,  0x81,  0x89,  0x89,  0xFF,  0x76, 
/* 0x34  '4' [98] */  0x38,  0x24,  0x22,  0xFF,  0xFF,  0x20, 
/* 0x35  '5' [104] */  0x6F,  0x89,  0x89,  0x89,  0xF9,  0x71, 
/* 0x36  '6' [110] */  0x7E,  0xFF,  0x89,  0x89,  0x89,  0x70, 
/* 0x37  '7' [116] */  0x01,  0x01,  0xF9,  0xFD,  0x0F,  0x07, 
/* 0x38  '8' [122] */  0x76,  0x89,  0x89,  0x89,  0xFF,  0x76, 
/* 0x39  '9' [128] */  0x66,  0x89,  0x89,  0x89,  0xFF,  0x7E, 
/* 0x3A  ':' [134] */  0x00, 
/* 0x3B  ';' [135] */  0x00,  0x80,  0xE6,  0x66, 
/* 0x3C  '<' [139] */  0x08,  0x1C,  0x32,  0x61,  0x40, 
/* 0x3D  '=' [144] */  0x34,  0x34,  0x34,  0x34,  0x34, 
/* 0x3E  '>' [149] */  0x40,  0x61,  0x32,  0x1C,  0x08, 
/* 0x3F  '?' [154] */  0x06,  0x01,  0xD1,  0xD9,  0x0F,  0x06, 
/* 0x40  '@' [160] */  0x7E,  0xFF,  0x81,  0x99,  0xA5,  0x3E, 
/* 0x41  'A' [166] */  0xFE,  0xFF,  0x09,  0x09,  0x09,  0xFE, 
/* 0x42  'B' [172] */  0xFF,  0xFF,  0x89,  0x89,  0x89,  0x76, 
/* 0x43  'C' [178] */  0x7E,  0xFF,  0x81,  0x81,  0x81,  0x66, 
/* 0x44  'D' [184] */  0xFF,  0xFF,  0x81,  0x81,  0x42,  0x3C, 
/* 0x45  'E' [190] */  0xFF,  0xFF,  0x89,  0x89,  0x89,  0x89, 
/* 0x46  'F' [196] */  0xFF,  0xFF,  0x09,  0x09,  0x01,  0x01, 
/* 0x47  'G' [202] */  0x7E,  0xFF,  0x81,  0x91,  0x91,  0x76, 
/* 0x48  'H' [208] */  0xFF,  0xFF,  0x08,  0x08,  0x08,  0xFF, 
/* 0x49  'I' [214] */  0x00,  0x81,  0xFF,  0xFF,  0x81, 
/* 0x4A  'J' [219] */  0x60,  0x81,  0x81,  0xFF,  0x7F,  0x01, 
/* 0x4B  'K' [225] */  0xFF,  0xFF,  0x18,  0x24,  0x42,  0x81, 
/* 0x4C  'L' [231] */  0xFF,  0xFF,  0x80,  0x80,  0x80,  0x80, 
/* 0x4D  'M' [237] */  0xFF,  0xFF,  0x04,  0x18,  0x04,  0xFF, 
/* 0x4E  'N' [243] */  0xFF,  0xFF,  0x04,  0x08,  0x10,  0xFF, 
/* 0x4F  'O' [249] */  0x7E,  0xFF,  0x81,  0x81,  0x81,  0x7E, 
/* 0x50  'P' [255] */  0xFF,  0xFF,  0x11,  0x11,  0x11,  0x0E, 
/* 0x51  'Q' [261] */  0x7E,  0xFF,  0x81,  0xB1,  0x41,  0xBE, 
/* 0x52  'R' [267] */  0xFF,  0xFF,  0x11,  0x31,  0x51,  0x8E, 
/* 0x53  'S' [273] */  0x46,  0x89,  0x89,  0x89,  0xF9,  0x72, 
/* 0x54  'T' [279] */  0x01,  0x01,  0xFF,  0xFF,  0x01,  0x01, 
/* 0x55  'U' [285] */  0x7F,  0xFF,  0x80,  0x80,  0x80,  0x7F, 
/* 0x56  'V' [291] */  0x1F,  0x3F,  0x60,  0xC0,  0x80,  0x7F, 
/* 0x57  'W' [297] */  0x7F,  0xFF,  0x80,  0x60,  0x80,  0x7F, 
/* 0x58  'X' [303] */  0xC3,  0x2F,  0x1C,  0x38,  0xF4,  0xC3, 
/* 0x59  'Y' [309] */  0x03,  0x0F,  0xFC,  0xF0,  0x0C,  0x03, 
/* 0x5A  'Z' [315] */  0xC1,  0xE1,  0xB9,  0x9D,  0x87,  0x83, 
/* 0x5B  '[' [321] */  0x00,  0xFF,  0xFF,  0x81,  0x81, 
/* 0x5C  '\' [326] */  0x03,  0x0F,  0x3C,  0xF0,  0xC0, 
/* 0x5D  ']' [331] */  0x00,  0x81,  0x81,  0xFF,  0xFF, 
/* 0x5E  '^' [336] */  0x04,  0x06,  0x03,  0x02,  0x04, 
/* 0x5F  '_' [341] */  0x80,  0x80,  0x80,  0x80,  0x80,  0x80, 
/* 0x60  '`' [347] */  0x00,  0x03,  0x07,  0x04, 
/* 0x61  'a' [351] */  0x60,  0x94,  0x94,  0x94,  0xFC,  0xF8, 
/* 0x62  'b' [357] */  0xFF,  0xFF,  0x88,  0x88,  0x88,  0x70, 
/* 0x63  'c' [363] */  0x78,  0xFC,  0x84,  0x84,  0x84,  0x48, 
/* 0x64  'd' [369] */  0x70,  0x88,  0x88,  0x88,  0xFF,  0xFF, 
/* 0x65  'e' [375] */  0x78,  0xFC,  0xA4,  0xA4,  0xA4,  0x38, 
/* 0x66  'f' [381] */  0x10,  0xFE,  0xFF,  0x11,  0x11,  0x16, 
/* 0x67  'g' [387] */  0x18,  0xA4,  0xA4,  0xA4,  0xFC,  0x78, 
/* 0x68  'h' [393] */  0xFF,  0xFF,  0x10,  0x08,  0x08,  0xF0, 
/* 0x69  'i' [399] */  0x00,  0x7B,  0xFB,  0x80, 
/* 0x6A  'j' [403] */  0x60,  0x80,  0x80,  0x80,  0xFB,  0x7B, 
/* 0x6B  'k' [409] */  0xFF,  0xFF,  0x10,  0x28,  0x44,  0x80, 
/* 0x6C  'l' [415] */  0x7F,  0xFF,  0x80, 
/* 0x6D  'm' [418] */  0xF8,  0xF8,  0x04,  0x38,  0x04,  0xF8, 
/* 0x6E  'n' [424] */  0xF8,  0xF8,  0x04,  0x04,  0x04,  0xF8, 
/* 0x6F  'o' [430] */  0x78,  0xF8,  0x84,  0x84,  0x84,  0x78, 
/* 0x70  'p' [436] */  0xFC,  0xFC,  0x24,  0x24,  0x24,  0x18, 
/* 0x71  'q' [442] */  0x18,  0x24,  0x24,  0x24,  0xFC,  0xFC, 
/* 0x72  'r' [448] */  0xF8,  0xFC,  0x04,  0x04,  0x04,  0x18, 
/* 0x73  's' [454] */  0x08,  0x94,  0x94,  0x94,  0xF4,  0x60, 
/* 0x74  't' [460] */  0x04,  0x7F,  0xFF,  0x84,  0x84,  0x64, 
/* 0x75  'u' [466] */  0x7C,  0x80,  0x80,  0x80,  0xFC,  0xFC, 
/* 0x76  'v' [472] */  0x0C,  0x30,  0xC0,  0xF0,  0x3C,  0x0C, 
/* 0x77  'w' [478] */  0x7C,  0x80,  0x70,  0x80,  0xFC,  0x7C, 
/* 0x78  'x' [484] */  0x84,  0x4C,  0x38,  0x70,  0xC8,  0x84, 
/* 0x79  'y' [490] */  0x1C,  0xA0,  0xA0,  0xA0,  0xFC,  0x7C, 
/* 0x7A  'z' [496] */  0xC4,  0xE4,  0xA4,  0x94,  0x9C,  0x8C, 
/* 0x7B  '{' [502] */  0x00,  0x18,  0x3C,  0xE7,  0x81, 
/* 0x7C  '|' [507] */  0x00, 
/* 0x7D  '}' [508] */  0x00,  0x81,  0xE7,  0x3C,  0x18, 
/* 0x7E  '~' [513] */  0x04,  0x02,  0x03,  0x06,  0x02,  0x01, 
/* 0x7F  '' [519] */  0x00, 
};

const int _fontglyphs_Onyx[] PROGMEM = {
0, 1, 4, 10, 16, 22, 28, 34, 37, 42, 47, 
53, 59, 62, 68, 70, 75, 81, 86, 92, 98, 104, 
110, 116, 122, 128, 134, 135, 139, 144, 149, 154, 160, 
166, 172, 178, 184, 190, 196, 202, 208, 214, 219, 225, 
231, 237, 243, 249, 255, 261, 267, 273, 279, 285, 291, 
297, 303, 309, 315, 321, 326, 331, 336, 341, 347, 351, 
357, 363, 369, 375, 381, 387, 393, 399, 403, 409, 415, 
418, 424, 430, 436, 442, 448, 454, 460, 466, 472, 478, 
484, 490, 496, 502, 507, 508, 513, };


//////////////////////////////////////////////////////////////////
// some bitmaps

/* Key:

    space
  ! Llama
  " Vertical Bar
  # Checkerboard A
  $ Checkerboard B
  % Big Heart
  & Small Heart
  ' Blocky Music Note
  ( Wide Note
  ) Narrow Note
  * Double Note Up
  + Double Note Down
  , Jasper Cat
  - Jack-O-Lantern
  . period
  / N/A
  0-9 digits
  : colon
  ; semicolon
 
 */

/* font data for Image Glyphs */
const unsigned char _fontdata_Images[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0x30,  0xF4,  0xB0,  0x34,  0xF0,  0xBF,  0x06,  0x06, 
/* 0x22  '"' [9] */  0xFF, 
/* 0x23  '#' [10] */  0x55, 
/* 0x24  '$' [11] */  0xAA, 
/* 0x25  '%' [12] */  0x0E,  0x1F,  0x3F,  0x7E,  0xFC,  0x7E,  0x3F,  0x1F,  0x0E, 
/* 0x26  '&' [21] */  0x0C,  0x1E,  0x3E,  0x7C,  0x3E,  0x1E,  0x0C, 
/* 0x27  ''' [28] */  0x60,  0x7E,  0x02,  0x02,  0x62,  0x7E, 
/* 0x28  '(' [34] */  0x60,  0xF0,  0xF0,  0xF0,  0x7F,  0x01,  0x01,  0x0B,  0x06, 
/* 0x29  ')' [43] */  0x60,  0xF0,  0xF0,  0x7F,  0x01,  0x0B,  0x06, 
/* 0x2A  '*' [50] */  0x40,  0xE0,  0xE0,  0x7E,  0x02,  0x23,  0x71,  0x71,  0x3F, 
/* 0x2B  '+' [59] */  0x20,  0x70,  0x70,  0x3F,  0x01,  0x41,  0xE3,  0xE2,  0x7E, 
/* 0x2C  ',' [68] */  0x03,  0xC3,  0x30,  0x08,  0x30,  0xC3,  0x03, 
/* 0x2D  '-' [75] */  0x04,  0x36,  0xE7,  0xC6,  0x64,  0x30,  0x64,  0xC6,  0xE7,  0x36,  0x04, 
/* 0x2E  '.' [86] */  0x40, 
/* 0x2F  '/' [87] */  0x00,  0xE0,  0x18, 
/* 0x30  '0' [90] */  0xFF,  0x81,  0xFF, 
/* 0x31  '1' [93] */  0x00,  0x02,  0xFF, 
/* 0x32  '2' [96] */  0xFB,  0x89,  0xCF, 
/* 0x33  '3' [99] */  0xC3,  0x89,  0xFF, 
/* 0x34  '4' [102] */  0x0E,  0x08,  0xFF, 
/* 0x35  '5' [105] */  0xCF,  0x89,  0xF9, 
/* 0x36  '6' [108] */  0xFF,  0x89,  0xFB, 
/* 0x37  '7' [111] */  0x03,  0xF1,  0x0F, 
/* 0x38  '8' [114] */  0xFF,  0x89,  0xFF, 
/* 0x39  '9' [117] */  0xCF,  0x89,  0xFF, 
/* 0x3A  ':' [120] */  0x24, 
/* 0x3B  ';' [121] */  0x64, 
/* 0x3C  '<' [122] */  0x00,  0x20,  0x60,  0x50,  0x90,  0x88, 
/* 0x3D  '=' [128] */  0x00,  0x40,  0x60,  0x60,  0x60,  0x40, 
/* 0x3E  '>' [134] */  0x00,  0x90,  0x90,  0x60,  0x20, 
/* 0x3F  '?' [139] */  0x04,  0xA4,  0x1C, 
/* 0x40  '@' [142] */  0xF0,  0x08,  0xF4,  0x94,  0x74,  0xD8,  0x20, 
/* 0x41  'A' [149] */  0xC0,  0x30,  0x4C,  0x38,  0xC0, 
/* 0x42  'B' [154] */  0x00,  0xFC,  0xA4,  0xF8, 
/* 0x43  'C' [158] */  0x30,  0xC8,  0x84,  0x84,  0x84, 
/* 0x44  'D' [163] */  0x00,  0xFC,  0x84,  0x84,  0x48,  0x30, 
/* 0x45  'E' [169] */  0x00,  0xFC,  0xA4,  0x84, 
/* 0x46  'F' [173] */  0x00,  0xFC,  0x24,  0x04, 
/* 0x47  'G' [177] */  0x30,  0xC8,  0x84,  0x84,  0xE4, 
/* 0x48  'H' [182] */  0x00,  0xFC,  0x20,  0x20,  0xFC, 
/* 0x49  'I' [187] */  0x00,  0xFC, 
/* 0x4A  'J' [189] */  0x00,  0xFC, 
/* 0x4B  'K' [191] */  0x00,  0xFC,  0x30,  0x4C,  0x80, 
/* 0x4C  'L' [196] */  0x00,  0xFC,  0x80,  0x80, 
/* 0x4D  'M' [200] */  0x00,  0x7C,  0x70,  0xC0,  0x30,  0xFC, 
/* 0x4E  'N' [206] */  0x00,  0x7C,  0x10,  0x60,  0xFC, 
/* 0x4F  'O' [211] */  0x30,  0xC8,  0x84,  0x84,  0x8C,  0x70, 
/* 0x50  'P' [217] */  0x00,  0xFC,  0x24,  0x1C, 
/* 0x51  'Q' [221] */  0x30,  0xC8,  0x84,  0x84,  0x8C,  0x70, 
/* 0x52  'R' [227] */  0x00,  0xFC,  0x24,  0x5C,  0x80, 
/* 0x53  'S' [232] */  0x88,  0x94,  0xA4,  0xE4, 
/* 0x54  'T' [236] */  0x04,  0x04,  0xFC,  0x04,  0x04, 
/* 0x55  'U' [241] */  0x00,  0xFC,  0x80,  0x80,  0x7C, 
/* 0x56  'V' [246] */  0x0C,  0x30,  0xC0,  0x70,  0x0C, 
/* 0x57  'W' [251] */  0x1C,  0xE0,  0x70,  0x1C,  0xE0,  0x78,  0x04, 
/* 0x58  'X' [258] */  0x84,  0x48,  0x30,  0xC8,  0x04, 
/* 0x59  'Y' [263] */  0x04,  0x18,  0xF0,  0x08,  0x04, 
/* 0x5A  'Z' [268] */  0x80,  0xC4,  0xB4,  0x8C, 
/* 0x5B  '[' [272] */  0x00,  0xFC, 
/* 0x5C  '\' [274] */  0x00,  0x38,  0xC0, 
/* 0x5D  ']' [277] */  0x00,  0xFC, 
/* 0x5E  '^' [279] */  0x00,  0x30,  0x0C,  0x30, 
/* 0x5F  '_' [283] */  0x00, 
/* 0x60  '`' [284] */  0x00, 
/* 0x61  'a' [285] */  0x40,  0xD0,  0xB0,  0xF0, 
/* 0x62  'b' [289] */  0x00,  0xFC,  0x90,  0x90,  0x60, 
/* 0x63  'c' [294] */  0x60,  0x90,  0x90,  0x80, 
/* 0x64  'd' [298] */  0x60,  0x90,  0x90,  0xFC, 
/* 0x65  'e' [302] */  0x60,  0xB0,  0xB0,  0xB0, 
/* 0x66  'f' [306] */  0x00,  0xFC, 
/* 0x67  'g' [308] */  0x60,  0x90,  0x90,  0xF0, 
/* 0x68  'h' [312] */  0x00,  0xFC,  0x10,  0xF0, 
/* 0x69  'i' [316] */  0x00,  0xF4, 
/* 0x6A  'j' [318] */  0x00,  0xF4, 
/* 0x6B  'k' [320] */  0x00,  0xFC,  0x60,  0x90, 
/* 0x6C  'l' [324] */  0x00,  0xFC, 
/* 0x6D  'm' [326] */  0x00,  0xF0,  0x10,  0xF0,  0x10,  0x10,  0xF0, 
/* 0x6E  'n' [333] */  0x00,  0xF0,  0x10,  0xF0, 
/* 0x6F  'o' [337] */  0x60,  0x90,  0x90,  0xF0, 
/* 0x70  'p' [341] */  0x00,  0xF0,  0x90,  0x90,  0x60, 
/* 0x71  'q' [346] */  0x60,  0x90,  0x90,  0xF0, 
/* 0x72  'r' [350] */  0x00,  0xF0, 
/* 0x73  's' [352] */  0x00,  0xB0,  0xC0, 
/* 0x74  't' [355] */  0x00,  0xF8,  0x80, 
/* 0x75  'u' [358] */  0x00,  0xF0,  0x80,  0xF0, 
/* 0x76  'v' [362] */  0x30,  0xC0,  0xE0,  0x10, 
/* 0x77  'w' [366] */  0x30,  0xC0,  0x60,  0x70,  0xC0,  0x30, 
/* 0x78  'x' [372] */  0x80,  0x50,  0x60,  0x90, 
/* 0x79  'y' [376] */  0x10,  0x60,  0xE0,  0x10, 
/* 0x7A  'z' [380] */  0x80,  0xC0,  0xB0,  0x90, 
/* 0x7B  '{' [384] */  0xF8,  0x04, 
/* 0x7C  '|' [386] */  0x00,  0xFC, 
/* 0x7D  '}' [388] */  0x00,  0xDC,  0x20, 
/* 0x7E  '~' [391] */  0x00,  0x20,  0x20,  0x20,  0x20, 
/* 0x7F  '' [396] */  0x00, 
};

const int _fontglyphs_Images[] PROGMEM = {
0, 1, 9, 10, 11, 12, 21, 28, 34, 43, 50, 
59, 68, 75, 86, 87, 90, 93, 96, 99, 102, 105, 
108, 111, 114, 117, 120, 121, 122, 128, 134, 139, 142, 
149, 154, 158, 163, 169, 173, 177, 182, 187, 189, 191, 
196, 200, 206, 211, 217, 221, 227, 232, 236, 241, 246, 
251, 258, 263, 268, 272, 274, 277, 279, 283, 284, 285, 
289, 294, 298, 302, 306, 308, 312, 316, 318, 320, 324, 
326, 333, 337, 341, 346, 350, 352, 355, 358, 362, 366, 
372, 376, 380, 384, 386, 388, 391, };


#ifdef NEVER
/* font data for Gallant12x22 */
const unsigned char _fontdata_sun[] PROGMEM = {
/* 0x20  ' ' [0] */  0x00, 
/* 0x21  '!' [1] */  0x00, 
/* 0x22  '"' [2] */  0x00, 
/* 0x23  '#' [3] */  0x00,  0x00,  0x00,  0x30,  0xF0,  0xF8,  0x3F,  0x37,  0xF0,  0xF8,  0x3F,  0x37, 
/* 0x24  '$' [15] */  0x00,  0x38,  0x7C,  0xC6,  0xC6,  0xFF,  0xFF,  0x86,  0x8E,  0x1C,  0x18, 
/* 0x25  '%' [26] */  0x00,  0x0E,  0x11,  0x11,  0x11,  0x8E,  0xE0,  0x78,  0x1E,  0x07,  0x01, 
/* 0x26  '&' [37] */  0x00,  0x00,  0x80,  0xDC,  0xFE,  0xE3,  0xE3,  0x23,  0x3E,  0x1C,  0x00, 
/* 0x27  ''' [48] */  0x00, 
/* 0x28  '(' [49] */  0x00, 
/* 0x29  ')' [50] */  0x00, 
/* 0x2A  '*' [51] */  0x00,  0xC0,  0xC0,  0x80,  0x10,  0xF0,  0xF0,  0x10,  0x80,  0xC0,  0xC0, 
/* 0x2B  '+' [62] */  0x00,  0x00,  0x00,  0x00,  0x00,  0xE0,  0xE0,  0x00,  0x00,  0x00,  0x00, 
/* 0x2C  ',' [73] */  0x00, 
/* 0x2D  '-' [74] */  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00, 
/* 0x2E  '.' [85] */  0x00, 
/* 0x2F  '/' [86] */  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0xE0,  0x78,  0x1E,  0x07,  0x01, 
/* 0x30  '0' [97] */  0x00, 
/* 0x31  '1' [98] */  0x00, 
/* 0x32  '2' [99] */  0x00,  0x0C,  0x06,  0x03,  0x03,  0x03,  0x03,  0x87,  0xFE,  0x7C,  0x00, 
/* 0x33  '3' [110] */  0x00,  0x08,  0x04,  0x02,  0x83,  0xC3,  0xC3,  0xC3,  0xE7,  0xFE,  0x3C, 
/* 0x34  '4' [121] */  0x00,  0x00,  0x00,  0x80,  0x60,  0x18,  0x06,  0xFF,  0xFF,  0x00,  0x00, 
/* 0x35  '5' [132] */  0x00,  0x00,  0x70,  0x6C,  0x23,  0x23,  0x23,  0x63,  0xE3,  0xC3,  0x80, 
/* 0x36  '6' [143] */  0x00,  0xE0,  0xF8,  0x1C,  0x86,  0xC3,  0xC1,  0xC1,  0xC0,  0x80,  0x00, 
/* 0x37  '7' [154] */  0x00,  0x04,  0x06,  0x03,  0x03,  0x03,  0x03,  0x83,  0xF3,  0x1F,  0x03, 
/* 0x38  '8' [165] */  0x00, 
/* 0x39  '9' [166] */  0x00,  0x78,  0xFC,  0xC2,  0x81,  0x81,  0x81,  0x83,  0x47,  0xFE,  0xFC, 
/* 0x3A  ':' [177] */  0x00, 
/* 0x3B  ';' [178] */  0x00, 
/* 0x3C  '<' [179] */  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x80,  0xC0,  0x40,  0x60,  0x20, 
/* 0x3D  '=' [190] */  0x00,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80, 
/* 0x3E  '>' [200] */  0x00,  0x20,  0x60,  0xC0,  0xC0,  0x80,  0x80,  0x00,  0x00,  0x00,  0x00, 
/* 0x3F  '?' [211] */  0x00, 
/* 0x40  '@' [212] */  0x00,  0xC0,  0xF0,  0x30,  0x18,  0x98,  0x98,  0x98,  0x18,  0x70,  0xE0, 
/* 0x41  'A' [223] */  0x00,  0x00,  0x00,  0xC0,  0x38,  0x06,  0x1E,  0xF8,  0xC0,  0x00,  0x00,  0x00, 
/* 0x42  'B' [235] */  0x02,  0xFE,  0xFE,  0x82,  0x82,  0x82,  0x82,  0xC2,  0xFC,  0x38,  0x00, 
/* 0x43  'C' [246] */  0x00,  0xE0,  0xF8,  0x04,  0x02,  0x02,  0x02,  0x02,  0x02,  0x06,  0x0C, 
/* 0x44  'D' [257] */  0x02,  0xFE,  0xFE,  0x02,  0x02,  0x02,  0x02,  0x06,  0x0C,  0xFC,  0xF0, 
/* 0x45  'E' [268] */  0x00,  0x02,  0xFE,  0xFE,  0x82,  0x82,  0x82,  0x82,  0xC2,  0x0E,  0x00, 
/* 0x46  'F' [279] */  0x00,  0x02,  0xFE,  0xFE,  0x82,  0x82,  0x82,  0x82,  0xC2,  0x0E, 
/* 0x47  'G' [289] */  0x00,  0xE0,  0xF8,  0x04,  0x02,  0x02,  0x02,  0x02,  0x02,  0x06,  0x0C,  0x00, 
/* 0x48  'H' [301] */  0x02,  0xFE,  0xFE,  0x82,  0x80,  0x80,  0x80,  0x80,  0x82,  0xFE,  0xFE,  0x02, 
/* 0x49  'I' [313] */  0x00, 
/* 0x4A  'J' [314] */  0x00, 
/* 0x4B  'K' [315] */  0x02,  0xFE,  0xFE,  0xC2,  0xE0,  0x30,  0x18,  0x0C,  0x06,  0x02,  0x02,  0x00, 
/* 0x4C  'L' [327] */  0x00,  0x02,  0xFE,  0xFE,  0x02,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00, 
/* 0x4D  'M' [338] */  0x02,  0xFE,  0x3E,  0xF8,  0xC0,  0x00,  0x00,  0xC0,  0x3C,  0xFE,  0xFE,  0x02, 
/* 0x4E  'N' [350] */  0x02,  0xFE,  0x1C,  0x38,  0x70,  0xC0,  0x80,  0x00,  0x00,  0x02,  0xFE,  0x02, 
/* 0x4F  'O' [362] */  0x00,  0xE0,  0xF8,  0x04,  0x02,  0x02,  0x02,  0x06,  0x0C,  0xFC,  0xF0, 
/* 0x50  'P' [373] */  0x00,  0x02,  0xFE,  0xFE,  0x02,  0x82,  0x82,  0x82,  0xC6,  0x7C,  0x38, 
/* 0x51  'Q' [384] */  0x00,  0xE0,  0xF8,  0x04,  0x02,  0x02,  0x02,  0x06,  0x0C,  0xFC,  0xF0, 
/* 0x52  'R' [395] */  0x02,  0xFE,  0xFE,  0x82,  0x82,  0x82,  0x82,  0x86,  0x7C,  0x38,  0x00,  0x00, 
/* 0x53  'S' [407] */  0x00,  0x38,  0x7C,  0xE6,  0xC2,  0xC2,  0x82,  0x02,  0x02,  0x06,  0x1E, 
/* 0x54  'T' [418] */  0x00,  0x06,  0x02,  0x02,  0x02,  0xFE,  0xFE,  0x02,  0x02,  0x02,  0x06, 
/* 0x55  'U' [429] */  0x02,  0xFE,  0xFE,  0x02,  0x00,  0x00,  0x00,  0x00,  0x00,  0x02,  0xFE,  0x02, 
/* 0x56  'V' [441] */  0x02,  0x06,  0x3E,  0xF8,  0xC0,  0x00,  0x00,  0xC0,  0x3A,  0x06,  0x02, 
/* 0x57  'W' [452] */  0x02,  0x7E,  0xFE,  0xE2,  0x02,  0x7E,  0xFE,  0xC0,  0x02,  0xC2,  0x3E,  0x02, 
/* 0x58  'X' [464] */  0x02,  0x06,  0x1E,  0x3A,  0x70,  0xC0,  0x80,  0x40,  0x30,  0x0A,  0x06,  0x02, 
/* 0x59  'Y' [476] */  0x02,  0x06,  0x0E,  0x3A,  0x70,  0xC0,  0x80,  0x40,  0x30,  0x0A,  0x06,  0x02, 
/* 0x5A  'Z' [488] */  0x00, 
/* 0x5B  '[' [489] */  0x00, 
/* 0x5C  '\' [490] */  0x00,  0x03,  0x0F,  0x3C,  0xF0,  0xC0,  0x00,  0x00,  0x00,  0x00, 
/* 0x5D  ']' [500] */  0x00,  0x03,  0x03,  0x03,  0xFF,  0xFF, 
/* 0x5E  '^' [506] */  0x00,  0x10,  0x18,  0x0C,  0x06,  0x03,  0x06,  0x0C,  0x18,  0x10, 
/* 0x5F  '_' [516] */  0x00, 
/* 0x60  '`' [517] */  0x00, 
/* 0x61  'a' [518] */  0x00, 
/* 0x62  'b' [519] */  0x04,  0xFE,  0xFF,  0x80,  0x40,  0x60,  0x60,  0x60,  0xE0,  0xC0,  0x80, 
/* 0x63  'c' [530] */  0x00,  0x00,  0xC0,  0x60,  0x20,  0x20,  0x20,  0x60,  0xE0,  0xC0, 
/* 0x64  'd' [540] */  0x00,  0x00,  0xC0,  0x40,  0x20,  0x20,  0x20,  0x60,  0xC2,  0xFF,  0xFF,  0x00, 
/* 0x65  'e' [552] */  0x00,  0x80,  0xC0,  0x40,  0x20,  0x20,  0x20,  0x20,  0x40,  0xC0,  0x80, 
/* 0x66  'f' [563] */  0x00, 
/* 0x67  'g' [564] */  0x00,  0x80,  0xC0,  0x60,  0x20,  0x20,  0x20,  0x60,  0xC0,  0xC0,  0x60, 
/* 0x68  'h' [575] */  0x00,  0x04,  0xFE,  0xFF,  0x40,  0x20,  0x20,  0x60,  0xE0,  0xC0,  0x00, 
/* 0x69  'i' [586] */  0x00, 
/* 0x6A  'j' [587] */  0x00, 
/* 0x6B  'k' [588] */  0x02,  0xFF,  0xFF,  0x00,  0x00,  0x80,  0xC0,  0x60,  0x20,  0x20,  0x00, 
/* 0x6C  'l' [599] */  0x00, 
/* 0x6D  'm' [600] */  0x20,  0xE0,  0xC0,  0x20,  0x60,  0xE0,  0xC0,  0x20,  0x60,  0xE0,  0xC0,  0x00, 
/* 0x6E  'n' [612] */  0x00,  0x40,  0xE0,  0xC0,  0x40,  0x20,  0x20,  0x60,  0xE0,  0xC0,  0x00, 
/* 0x6F  'o' [623] */  0x00,  0x00,  0x80,  0x40,  0x20,  0x20,  0x20,  0x60,  0xE0,  0xC0,  0x80, 
/* 0x70  'p' [634] */  0x20,  0xE0,  0xE0,  0x40,  0x20,  0x20,  0x20,  0x60,  0xE0,  0xC0,  0x80, 
/* 0x71  'q' [645] */  0x00,  0x00,  0x80,  0x40,  0x20,  0x20,  0x20,  0x60,  0xC0,  0xC0,  0xE0, 
/* 0x72  'r' [656] */  0x00,  0x20,  0xE0,  0xE0,  0x80,  0x40,  0x20,  0x20,  0xE0,  0xC0, 
/* 0x73  's' [666] */  0x00, 
/* 0x74  't' [667] */  0x00,  0x20,  0x20,  0x20,  0xF0,  0xFC,  0x20,  0x20,  0x20,  0x20,  0x00, 
/* 0x75  'u' [678] */  0x00,  0x20,  0xE0,  0xE0,  0x20,  0x00,  0x00,  0x20,  0xE0,  0xE0,  0x20, 
/* 0x76  'v' [689] */  0x20,  0x60,  0xE0,  0xA0,  0x00,  0x00,  0x00,  0x00,  0x00,  0xA0,  0x60,  0x20, 
/* 0x77  'w' [701] */  0x20,  0xE0,  0xE0,  0x20,  0x20,  0xE0,  0xE0,  0x20,  0x00,  0x20,  0xE0,  0x20, 
/* 0x78  'x' [713] */  0x20,  0x60,  0xE0,  0xE0,  0xA0,  0x00,  0x00,  0x00,  0xA0,  0x60,  0x20,  0x20, 
/* 0x79  'y' [725] */  0x20,  0x60,  0xE0,  0xA0,  0x00,  0x00,  0x00,  0x00,  0x20,  0xA0,  0x60,  0x20, 
/* 0x7A  'z' [737] */  0x00,  0xE0,  0x60,  0x20,  0x20,  0x20,  0x20,  0xA0,  0xE0,  0xE0,  0x60, 
/* 0x7B  '{' [748] */  0x00, 
/* 0x7C  '|' [749] */  0x00, 
/* 0x7D  '}' [750] */  0x00, 
/* 0x7E  '~' [751] */  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00, 
/* 0x7F  '' [762] */  0x00, 
};

const int _fontglyphs_sun[] PROGMEM = {
0, 1, 2, 3, 15, 26, 37, 48, 49, 50, 51, 
62, 73, 74, 85, 86, 97, 98, 99, 110, 121, 132, 
143, 154, 165, 166, 177, 178, 179, 190, 200, 211, 212, 
223, 235, 246, 257, 268, 279, 289, 301, 313, 314, 315, 
327, 338, 350, 362, 373, 384, 395, 407, 418, 429, 441, 
452, 464, 476, 488, 489, 490, 500, 506, 516, 517, 518, 
519, 530, 540, 552, 563, 564, 575, 586, 587, 588, 599, 
600, 612, 623, 634, 645, 656, 666, 667, 678, 689, 701, 
713, 725, 737, 748, 749, 750, 751, };


unsigned char * fontdata = _fontdata_sun;
int * fontglyphs = _fontglyphs_sun;
#endif

// AddFont:
//	1. paste your font/glyph data here
//	2. rename your _xxx to _FontName

//////////////////////////////////////////////////////////////////

// the ram storage of which one we're using
// also set the default
const unsigned char * fontdata = _fontdata_ReadyP9;
const int * fontglyphs = _fontglyphs_ReadyP9;
int font_selected = kFont_ReadyP9;

//////////////////////////////////////////////////////////////////

void SelectFontID( int whichFont )
{
  font_selected = whichFont;
  
  switch( whichFont ) {
  case( kFont_CapsCaps ):
    fontdata = _fontdata_CAPScaps;
    fontglyphs = _fontglyphs_CAPScaps;
    break;
    
  case( kFont_Images ):
    fontdata = _fontdata_Images;
    fontglyphs = _fontglyphs_Images;
    break;
    
  case( kFont_NarrowCaps ):
    fontdata = _fontdata_NarrowCaps;
    fontglyphs = _fontglyphs_NarrowCaps;
    break;
      
  case( kFont_Onyx ):
    fontdata = _fontdata_Onyx;
    fontglyphs = _fontglyphs_Onyx;
    break;

  // AddFont - Additional fonts should go here
  
  case( kFont_ReadyP9 ):
    default:
      fontdata = _fontdata_ReadyP9;
      fontglyphs = _fontglyphs_ReadyP9;
      break;        
    }
}



void SelectFontString( const char* whichFont )
{
       if( whichFont[0] == 'C' ) SelectFontID( kFont_CapsCaps );
  else if( whichFont[0] == 'R' ) SelectFontID( kFont_ReadyP9 );
  else if( whichFont[0] == 'N' ) SelectFontID( kFont_NarrowCaps );
  else if( whichFont[0] == 'O' ) SelectFontID( kFont_Onyx );
  else if( whichFont[0] == 'I' ) SelectFontID( kFont_Images );
  // AddFont - Additional fonts should go here
  // - pick a name that starts with a unique letter!

  else SelectFontID( kFont_ReadyP9 );
}

void Font_toggle()
{
  switch( font_selected ) {
    case( kFont_CapsCaps ):   SelectFontID( kFont_ReadyP9 ); return;
    case( kFont_ReadyP9 ):    SelectFontID( kFont_NarrowCaps ); return;
    case( kFont_NarrowCaps ): SelectFontID( kFont_Onyx ); return;
    case( kFont_Onyx ):       SelectFontID( kFont_Images ); return;
    case( kFont_Images ):
    default:                  SelectFontID( kFont_CapsCaps ); return;
  }
}


const char tf_un[] PROGMEM = "unk?";
const char tf_cc[] PROGMEM = "CapsCaps";
const char tf_rp[] PROGMEM = "ReadyP9";
const char tf_nc[] PROGMEM = "NarrowCaps";
const char tf_on[] PROGMEM = "Onyx";
const char tf_im[] PROGMEM = "IMAGES";

//const char* const string_table[] PROGMEM = {string_0, string_1, string_2, string_3, string_4, string_5};


const char * Font_name()
{
  switch( font_selected ) {
    case( kFont_CapsCaps ):   return tf_cc;
    case( kFont_ReadyP9 ):    return tf_rp;
    case( kFont_NarrowCaps ): return tf_nc;
    case( kFont_Onyx ):       return tf_on;
    case( kFont_Images ):     return tf_im;
  }

  return tf_un;
}

