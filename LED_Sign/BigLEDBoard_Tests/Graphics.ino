
// Graphics
// 
//  All are 16 bit tall.
//  1-bit data is packed in 16 bit unsigned integers
//  The first int is the leftmost column (x=0)
//   The second int is the next column (x=1) ... and so on
//  The LSB (0x00001) is the top pixel
//  The MSB (0x8000 ) is the bottom pixel
//  The first integer is two bytes packed together:
//    the number of ints that follow (width of the graphic) (max of 255)
//    the horizontal offset to start at from a base graphic (for overlays) (<<8) (max of 127)
//    MSB of the first byte (0x8000) Is for future use.  keep it clear for now.


/* some macros to simplify setting width and offset in thst first byte */
#define GFX_OFFSET( O ) ( ((O) << 8 ) & 0x7F00 )
#define GFX_WIDTH( W )  (  (W) & 0x00FF )

#define GFX_WIDTH_AND_OFFSET( W, O ) ( GFX_OFFSET( O ) | GFX_WIDTH( W ) )

#define GFX_GetOffset( D )  (((D) >> 8) & 0x007F)
#define GFX_GetWidth( D )   ((D) & 0x00FF )



/* and now here are the bitmaps... */


/* "Interlock" in Sun Gallant 12x22 font */
const PROGMEM unsigned int gfx_interlock[] = {
  GFX_WIDTH( 99 ),
  0x4002, 0x4002, 0x7ffe, 0x7ffe, 0x4002, 0x4002, 0x0000, 0x0000,
  0x0000, 0x0000, 0x4040, 0x7fe0, 0x7fc0, 0x4040, 0x0020, 0x0020,
  0x4060, 0x7fe0, 0x7fc0, 0x4000, 0x0000, 0x0000, 0x0020, 0x0020,
  0x0020, 0x3ff0, 0x7ffc, 0x6020, 0x4020, 0x4020, 0x2020, 0x1000,
  0x0000, 0x0000, 0x0f80, 0x1fc0, 0x3240, 0x6220, 0x4220, 0x4220,
  0x4220, 0x4240, 0x23c0, 0x2380, 0x0000, 0x0000, 0x4020, 0x7fe0,
  0x7fe0, 0x4080, 0x0040, 0x0020, 0x0020, 0x00e0, 0x00c0, 0x0000,
  0x0000, 0x4001, 0x4001, 0x7fff, 0x7fff, 0x4000, 0x4000, 0x0000,
  0x0000, 0x1f00, 0x3f80, 0x7040, 0x6020, 0x4020, 0x4020, 0x4060,
  0x20e0, 0x1fc0, 0x0f80, 0x0000, 0x0000, 0x1f00, 0x3fc0, 0x7060,
  0x4020, 0x4020, 0x4020, 0x4060, 0x60e0, 0x30c0, 0x0000, 0x0000,
  0x4002, 0x7fff, 0x7fff, 0x4700, 0x0f00, 0x1d80, 0x38c0, 0x7060,
  0x6020, 0x4020, 0x4000
};

/* "Rochester" in Sun Gallant 12x22 font */
const PROGMEM unsigned int gfx_rochester[] = {
  GFX_WIDTH( 105 ),
  0x4002, 0x7ffe, 0x7ffe, 0x4182, 0x0382, 0x0782, 0x0e82, 0x1c86,
  0x387c, 0x7038, 0x6000, 0x4000, 0x0000, 0x1f00, 0x3f80, 0x7040,
  0x6020, 0x4020, 0x4020, 0x4060, 0x20e0, 0x1fc0, 0x0f80, 0x0000,
  0x0000, 0x1f00, 0x3fc0, 0x7060, 0x4020, 0x4020, 0x4020, 0x4060,
  0x60e0, 0x30c0, 0x0000, 0x0000, 0x0000, 0x4004, 0x7ffe, 0x7fff,
  0x4040, 0x0020, 0x0020, 0x4060, 0x7fe0, 0x7fc0, 0x4000, 0x0000,
  0x0000, 0x0f80, 0x1fc0, 0x3240, 0x6220, 0x4220, 0x4220, 0x4220,
  0x4240, 0x23c0, 0x2380, 0x0000, 0x0000, 0x0000, 0x71c0, 0x63e0,
  0x4320, 0x4620, 0x4620, 0x4c20, 0x7c60, 0x38e0, 0x0000, 0x0000,
  0x0020, 0x0020, 0x0020, 0x3ff0, 0x7ffc, 0x6020, 0x4020, 0x4020,
  0x2020, 0x1000, 0x0000, 0x0000, 0x0f80, 0x1fc0, 0x3240, 0x6220,
  0x4220, 0x4220, 0x4220, 0x4240, 0x23c0, 0x2380, 0x0000, 0x0000,
  0x4020, 0x7fe0, 0x7fe0, 0x4080, 0x0040, 0x0020, 0x0020, 0x00e0,
  0x00c0,
};

/* "Interlock" slightly bolded */
const PROGMEM unsigned int gfx_interlock_bold[] = {
  GFX_WIDTH( 105 ),
  0xc006, 0xc006, 0xfffe, 0xfffe, 0xfffe, 0xc006, 0xc006, 0x0000,
  0x0000, 0x0000, 0xc0c0, 0xffe0, 0xffe0, 0xffc0, 0xc0e0, 0x0060,
  0xc0e0, 0xffe0, 0xffe0, 0xffc0, 0xc000, 0x0000, 0x0060, 0x0060,
  0x0060, 0x7ff0, 0xfffc, 0xfffc, 0xe060, 0xc060, 0xe060, 0x7060,
  0x3000, 0x0000, 0x1f80, 0x3fc0, 0x7fc0, 0xf6e0, 0xe660, 0xc660,
  0xc660, 0xc6e0, 0xe7c0, 0x67c0, 0x6780, 0x0000, 0xc060, 0xffe0,
  0xffe0, 0xffe0, 0xc1c0, 0x00e0, 0x0060, 0x01e0, 0x01e0, 0x01c0,
  0x0000, 0xc003, 0xc003, 0xffff, 0xffff, 0xffff, 0xc000, 0xc000,
  0x0000, 0x3f00, 0x7f80, 0xffc0, 0xf0e0, 0xe060, 0xc060, 0xc0e0,
  0xe1e0, 0x7fe0, 0x3fc0, 0x1f80, 0x0000, 0x3f00, 0x7fc0, 0xffe0,
  0xf0e0, 0xc060, 0xc060, 0xc0e0, 0xe1e0, 0xf1e0, 0x71c0, 0x0000,
  0xc006, 0xffff, 0xffff, 0xffff, 0xdf00, 0x3f80, 0x7fc0, 0xf9e0,
  0xf0e0, 0xe060, 0xc060, 0xc000, 
};

/* "Rochester" slightly bolded */
const PROGMEM unsigned int gfx_rochester_bold[] = {
  GFX_WIDTH( 105 ),
  0xc006, 0xfffe, 0xfffe, 0xfffe, 0xc786, 0x0f86, 0x1f86, 0x3f8e,
  0x7dfe, 0xf8fc, 0xf078, 0xe000, 0xc000, 0x3f00, 0x7f80, 0xffc0,
  0xf0e0, 0xe060, 0xc060, 0xc0e0, 0xe1e0, 0x7fe0, 0x3fc0, 0x1f80,
  0x0000, 0x3f00, 0x7fc0, 0xffe0, 0xf0e0, 0xc060, 0xc060, 0xc0e0,
  0xe1e0, 0xf1e0, 0x71c0, 0x0000, 0x0000, 0xc00c, 0xfffe, 0xffff,
  0xffff, 0xc0e0, 0x0060, 0xc0e0, 0xffe0, 0xffe0, 0xffc0, 0xc000,
  0x0000, 0x1f80, 0x3fc0, 0x7fc0, 0xf6e0, 0xe660, 0xc660, 0xc660,
  0xc6e0, 0xe7c0, 0x67c0, 0x6780, 0x0000, 0x0000, 0xf3c0, 0xf7e0,
  0xe7e0, 0xcf60, 0xce60, 0xde60, 0xfce0, 0xfde0, 0x79e0, 0x0000,
  0x0060, 0x0060, 0x0060, 0x7ff0, 0xfffc, 0xfffc, 0xe060, 0xc060,
  0xe060, 0x7060, 0x3000, 0x0000, 0x1f80, 0x3fc0, 0x7fc0, 0xf6e0,
  0xe660, 0xc660, 0xc660, 0xc6e0, 0xe7c0, 0x67c0, 0x6780, 0x0000,
  0xc060, 0xffe0, 0xffe0, 0xffe0, 0xc1c0, 0x00e0, 0x0060, 0x01e0,
  0x01e0,
};

/* -- PAC-MAN GHOST --
 *  _A and _B are the two frames of animation
 *  _I is the eyes.  Get it? HAHAHA.
 *  It is looking to the right.
 */
const PROGMEM unsigned int gfx_ghost_A[] = {
  GFX_WIDTH( 14 ),
  0x3FC0, 0x1ff8, 0x0ffc, 0x1f8E, 0x3F06, 0x3f07, 0x0f8f,
  0x0fff, 0x3fff, 0x3F8E, 0x1f06, 0x0f04, 0x1f88, 0x3fc0
};

const PROGMEM unsigned int gfx_ghost_B[] = {
  GFX_WIDTH( 14 ),
  0x1FC0, 0x3ff8, 0x3ffc, 0x1f8E, 0x0F06, 0x1f07, 0x3f8f, 
  0x3fff, 0x1fff, 0x0F8E, 0x1f06, 0x3f04, 0x3f88, 0x1fc0
};

const PROGMEM unsigned int gfx_ghost_I[] = {
  GFX_WIDTH_AND_OFFSET( 2, 5 ),
  0x0060, 0x0060
};

